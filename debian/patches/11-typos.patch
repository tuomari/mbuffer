Description: Fix some grammatical and typographical errors.
Author: Peter Pentchev <roam@ringlet.net>
Forwarded: yes
Last-Update: 2015-09-04

--- a/mbuffer.c
+++ b/mbuffer.c
@@ -1016,7 +1016,7 @@
 
 	if (!outfile) {
 		errormsg("End of volume, but not end of input:\n"
-			"Output file must be given (option -o) for multi volume support!\n");
+			"Output file must be given (option -o) for multi-volume support!\n");
 		return -1;
 	}
 	infomsg("end of volume - last block on volume: %lld\n",Numout);
@@ -1352,7 +1352,7 @@
 	(void) fprintf(stderr,
 		"mbuffer version "PACKAGE_VERSION"\n"\
 		"Copyright 2001-2014 - T. Maier-Komor\n"\
-		"License: GPLv3 - see file LICENSE\n"\
+		"License: GPLv3 - see the LICENSE file\n"\
 		"This program comes with ABSOLUTELY NO WARRANTY!!!\n"
 		"Donations via PayPal to thomas@maier-komor.de are welcome and support this work!\n"
 		"\n"
@@ -1381,7 +1381,7 @@
 		"-m <size>  : memory <size> of buffer in b,k,M,G,%% (default: %llu%c)\n"
 #endif
 #ifdef _POSIX_MEMLOCK_RANGE
-		"-L         : lock buffer in memory (unusable with file based buffers)\n"
+		"-L         : lock buffer in memory (unusable with file-based buffers)\n"
 #endif
 		"-d         : use blocksize of device for output\n"
 		"-D <size>  : assumed output device size (default: infinite/auto-detect)\n"
@@ -1395,12 +1395,12 @@
 		"-I <p>     : use network port <port> as input\n"
 		"-O <h>:<p> : output data to host <h> and port <p> (MUTLIPLE outputs supported)\n"
 		"-n <num>   : <num> volumes for input, '0' to prompt interactively\n"
-		"-t         : use memory mapped temporary file (for huge buffer)\n"
+		"-t         : use memory-mapped temporary file (for huge buffer)\n"
 		"-T <file>  : as -t but uses <file> as buffer\n"
 		"-l <file>  : use <file> for logging messages\n"
 		"-u <num>   : pause <num> milliseconds after each write\n"
 		"-r <rate>  : limit read rate to <rate> B/s, where <rate> can be given in b,k,M,G\n"
-		"-R <rate>  : same as -r for writing; use eiter one, if your tape is too fast\n"
+		"-R <rate>  : same as -r for writing; use either one, if your tape is too fast\n"
 		"-f         : overwrite existing files\n"
 		"-a <time>  : autoloader which needs <time> seconds to reload\n"
 		"-A <cmd>   : issue command <cmd> to request new volume\n"
@@ -1414,8 +1414,8 @@
 #endif
 #if defined HAVE_LIBCRYPTO || defined HAVE_LIBMD5 || defined HAVE_LIBMHASH
 		"-H\n"
-		"--md5      : generate md5 hash of transfered data\n"
-		"--hash <a> : use alogritm <a>, if <a> is 'list' possible algorithms are listed\n"
+		"--md5      : generate md5 hash of transferred data\n"
+		"--hash <a> : use algorithm <a>, if <a> is 'list' possible algorithms are listed\n"
 		"--pid      : print PID of this instance\n"
 		"-W <time>  : set watchdog timeout to <time> seconds\n"
 #endif
@@ -1475,9 +1475,9 @@
 			return (unsigned long long) d;
 		default:
 			if (argv[c][-2] == '-')
-				fatal("unrecognized size charakter \"%c\" for option \"%s\"\n",ch,&argv[c][-2]);
+				fatal("unrecognized size character \"%c\" for option \"%s\"\n",ch,&argv[c][-2]);
 			else
-				fatal("unrecognized size charakter \"%c\" for option \"%s\"\n",ch,argv[c-1]);
+				fatal("unrecognized size character \"%c\" for option \"%s\"\n",ch,argv[c-1]);
 			return d;
 		}
 	case 1:
@@ -2189,7 +2189,7 @@
 
 	/* multi volume input consistency checking */
 	if ((NumVolumes != 1) && (!Infile))
-		fatal("multi volume support for input needs an explicit given input device (option -i)\n");
+		fatal("multi-volume support for input needs an explicitly specified input device (option -i)\n");
 
 	/* SPW: Volsize consistency checking */
 	if (OutVolsize && !outfile)
@@ -2220,7 +2220,7 @@
 	if (Numblocks < 5)
 		fatal("Minimum block count is 5.\n");
 	if (Numblocks > mxnrsem) {
-		fatal("cannot allocate more than %d blocks.\nThis is a system dependent limit, depending on the maximum semaphore value.\nPlease choose a bigger block size.\n",mxnrsem);
+		fatal("cannot allocate more than %d blocks.\nThis is a system-dependent limit, depending on the maximum semaphore value.\nPlease choose a bigger block size.\n",mxnrsem);
 	}
 
 	if ((Blocksize * (long long)Numblocks) > (long long)SSIZE_MAX)
--- a/configure.in
+++ b/configure.in
@@ -90,7 +90,7 @@
 AC_SEARCH_LIBS(hstrerror,resolv socket nsl,AC_DEFINE([HAVE_HSTRERROR], [1], [Define to 1 if you have the hstrerror() function]),)
 AC_SEARCH_LIBS(getaddrinfo,resolv socket nsl,AC_DEFINE([HAVE_GETADDRINFO], [1], [Define to 1 if you have the getaddrinfo() function]),)
 AC_SEARCH_LIBS(socket,socket,,AC_MSG_ERROR(could not find the library containing network functions!))
-AC_SEARCH_LIBS(gethostbyname,nsl,,AC_MSG_ERROR(could not find the library containing name convertion functions!))
+AC_SEARCH_LIBS(gethostbyname,nsl,,AC_MSG_ERROR(could not find the library containing name conversion functions!))
 AC_SEARCH_LIBS(sendfile,sendfile,AC_DEFINE([HAVE_SENDFILE],[1],[libsendfile is available]),)
 AC_CHECK_HEADER(sys/sendfile.h,AC_DEFINE([HAVE_SENDFILE_H],[1],[sendfile in sendfile.h]),)
 AC_FUNC_ALLOCA
--- a/ChangeLog
+++ b/ChangeLog
@@ -296,7 +296,7 @@
   changed all floats to double
 
 20060421:
-- set exitcode to failure whenever an error occures
+- set exitcode to failure whenever an error occurs
 - fixed a warning
 
 20060324:
@@ -531,7 +531,7 @@
 
 20010124:
 - Bugfix: outputThread terminated too early in certain cases
-- Fix for correct termination if an error occured
+- Fix for correct termination if an error occurred
 - added install rule in Makefile
-- status messages are now indebendend of other messages
+- status messages are now independent of other messages
 - a little bit more verbose debugging info
